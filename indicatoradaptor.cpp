/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -a indicatoradaptor.h -c IndicatorAdaptor indicator-simple.xml com.example.network
 *
 * qdbusxml2cpp is Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "indicatoradaptor.h"

/*
 * Implementation of adaptor class IndicatorAdaptor
 */

IndicatorAdaptor::IndicatorAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

IndicatorAdaptor::~IndicatorAdaptor()
{
    // destructor
}

void IndicatorAdaptor::connect_wlan(int value)
{
    // handle method call com.example.network.connect_wlan
    QMetaObject::invokeMethod(parent(), "connect_wlan", Q_ARG(int, value));
}

QStringList IndicatorAdaptor::get_modems()
{
    // handle method call com.example.network.get_modems
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "get_modems", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

QStringList IndicatorAdaptor::get_wlans()
{
    // handle method call com.example.network.get_wlans
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "get_wlans", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

void IndicatorAdaptor::set_bt_killswitch(int value)
{
    // handle method call com.example.network.set_bt_killswitch
    QMetaObject::invokeMethod(parent(), "set_bt_killswitch", Q_ARG(int, value));
}

void IndicatorAdaptor::set_flightmode(int value)
{
    // handle method call com.example.network.set_flightmode
    QMetaObject::invokeMethod(parent(), "set_flightmode", Q_ARG(int, value));
}

void IndicatorAdaptor::set_wlan_killswitch(int value)
{
    // handle method call com.example.network.set_wlan_killswitch
    QMetaObject::invokeMethod(parent(), "set_wlan_killswitch", Q_ARG(int, value));
}

void IndicatorAdaptor::unlock_sim(int value)
{
    // handle method call com.example.network.unlock_sim
    QMetaObject::invokeMethod(parent(), "unlock_sim", Q_ARG(int, value));
}

