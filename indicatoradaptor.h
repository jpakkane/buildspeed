/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -a indicatoradaptor.h -c IndicatorAdaptor indicator-simple.xml com.example.network
 *
 * qdbusxml2cpp is Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef INDICATORADAPTOR_H_1417529771
#define INDICATORADAPTOR_H_1417529771

#include <QtCore/QObject>
#include <QtCore/QMetaObject>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Adaptor class for interface com.example.network
 */
class IndicatorAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.example.network")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.example.network\">\n"
"    <method name=\"get_modems\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"    </method>\n"
"    <method name=\"unlock_sim\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"set_bt_killswitch\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"connect_wlan\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"set_flightmode\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"    <method name=\"get_wlans\">\n"
"      <arg direction=\"out\" type=\"as\"/>\n"
"    </method>\n"
"    <method name=\"set_wlan_killswitch\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"value\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    IndicatorAdaptor(QObject *parent);
    virtual ~IndicatorAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void connect_wlan(int value);
    QStringList get_modems();
    QStringList get_wlans();
    void set_bt_killswitch(int value);
    void set_flightmode(int value);
    void set_wlan_killswitch(int value);
    void unlock_sim(int value);
Q_SIGNALS: // SIGNALS
};

#endif
